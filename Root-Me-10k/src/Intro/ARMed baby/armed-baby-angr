int _init()
{
    unsigned int v0;  // [bp-0x8]
    unsigned int v1;  // [bp-0x4]
    unsigned int v2;  // r3
    unsigned int v3;  // lr

    v1 = v3;
    v0 = v2;
    call_weak_fn();
    return;
}

int sub_4003e8()
{
    unsigned int v0;  // [bp-0x4]
    unsigned int v1;  // lr

    v0 = v1;
    /* goto *(4195320 + *(0x4003f8) + 8); */
}

extern char __libc_csu_fini;

int _start(unsigned int a0)
{
    unsigned int v0;  // [bp-0x8]
    unsigned int v1;  // [bp-0x4]
    unsigned int v2;  // [bp+0x0]

    v2 = &stack_base+4;
    v1 = a0;
    v0 = &__libc_csu_fini;
    __libc_start_main(); /* do not return */
}

int sub_400488()
{
    abort(); /* do not return */
}

int call_weak_fn()
{
    return;
}

int deregister_tm_clones()
{
    return;
    return;
    /* goto *(0x411000 + 44); */
}

extern <missing-type> __TMC_END__;

int register_tm_clones()
{
    return &__TMC_END__;
    return &__TMC_END__;
    /* goto *(0x411000 + 60); */
}

extern char __TMC_END__;

int __do_global_dtors_aux()
{
    unsigned int v0;  // [bp-0x8]
    unsigned int v1;  // [bp-0x4]
    unsigned int v2;  // r0
    unsigned int v3;  // r4
    unsigned int v4;  // r4
    unsigned int v5;  // lr

    return v2;
    v1 = v5;
    v0 = v3;
    __TMC_END__ = 1;
    v4 = v0;
    return deregister_tm_clones();
    if (False)
    {
        __cxa_finalize();
        __TMC_END__ = 1;
        v4 = v0;
        return deregister_tm_clones();
    }
}

int frame_dummy()
{
}

extern struct_0 n;

int main()
{
    char v0;  // [bp-0x10]
    unsigned int v1;  // [bp-0xc]
    unsigned int v2;  // [bp-0x4]
    unsigned int v5;  // r3
    unsigned int v6;  // lr

    v2 = v6;
    printf("Hello, welcome to this challenge! Will you be able to correctly guess the number I prefer?");
    v1 = __isoc99_scanf("%d", &v0);
    if (v1 == 0)
    {
        printf("What are you doing? It's not a number!");
        v5 = 1;
        return v5;
    }
    else if (v0 == n)
    {
        printf("How did you know? You can flag this challenge with this number inside of RM{}");
        v5 = 0;
        return v5;
    }
    else
    {
        printf("Nope!");
        v5 = 0;
        return v5;
    }
}

typedef struct struct_0 {
    unsigned int field_0;
} struct_0;

int __libc_csu_init(unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int v7, unsigned int v8, unsigned int v9, unsigned int v10, unsigned int v11, unsigned int v12, unsigned int v13)
{
    unsigned int v0;  // [bp-0x20]
    unsigned int v1;  // [bp-0x1c]
    unsigned int v15;  // r0
    unsigned int v16;  // r1
    unsigned int v17;  // r2
    unsigned int v18;  // r3
    unsigned int v19;  // r4
    unsigned int v2;  // [bp-0x18]
    unsigned int v20;  // r4
    unsigned int v21;  // r4
    unsigned int v22;  // r4
    struct_0 * v23;  // r5
    unsigned int v24;  // r5
    unsigned int v25;  // r5
    unsigned int v26;  // r6
    unsigned int v27;  // r6
    unsigned int v28;  // r6
    unsigned int v29;  // r7
    unsigned int v3;  // [bp-0x14]
    unsigned int v30;  // r7
    unsigned int v31;  // r7
    unsigned int v32;  // r8
    unsigned int v33;  // r8
    unsigned int v34;  // r8
    unsigned int v35;  // r9
    unsigned int v36;  // r9
    unsigned int v37;  // r9
    unsigned int v38;  // r10
    unsigned int v39;  // r10
    unsigned int v4;  // [bp-0x10]
    unsigned int v40;  // r10
    unsigned int v5;  // [bp-0xc]
    unsigned int v6;  // [bp-0x8]

    v6 = v38;
    v5 = v37;
    v4 = v33;
    v3 = v29;
    v2 = v26;
    v1 = v24;
    v0 = v21;
    v22 = v0;
    v23 = v1;
    v27 = v2;
    v30 = v3;
    v34 = v4;
    v35 = v5;
    v39 = v6;
    return _init();
    v19 = 0;
    while (true)
    {
        v19 += 1;
        v18 = v23->field_0;
        v23 += 4;
        v17 = v5;
        v16 = v4;
        v15 = v3;
        if (v2 == v19)
        {
            break;
        }
    }
    v20 = v7;
    v25 = v8;
    v28 = v9;
    v31 = v10;
    v32 = v11;
    v36 = v12;
    v40 = v13;
    return v18();
}

int __libc_csu_fini()
{
    unsigned int v0;  // r0

    return v0;
}

int _fini()
{
    unsigned int v0;  // [bp-0x8]
    unsigned int v1;  // [bp-0x4]
    unsigned int v2;  // r0
    unsigned int v3;  // r3
    unsigned int v4;  // lr

    v1 = v4;
    v0 = v3;
    return v2;
}

